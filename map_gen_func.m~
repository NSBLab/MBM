function maps = map_gen_func(N_A, N_B, sigma_C, sigma_S, in_e, GT_maps, input_maps, save_DIR)
% MAPS = map_gen_func(N_A, N_B, SIGMA_C, SIGMA_S, IN_E, GT_MAPS,
% INPUT_MAPS, SAVE_DIR) generates surface-based morphometric maps by using the individual specific maps listed in INPUT_MAPS. The maps used as ground truths are specified in the
% a file whose name is GT_FILE and directory is GT_DIR.
%
% N_A: number of maps generated in group A.
% N_B: number of maps generated in group B.
% SIGMA_C: value of parameter sigma_C.
% SIGMA_S: value of parameter sigma_S.
% in_E: index of the experiment.
% ID_DIR: directory of the list file
% ID_FILE: name of the list file
% SAVE_DIR: directory to save the generated maps
% GT_DIR: directory of the groundtruth file
% GT_FILE: name of the groundtruth file
%
% MAPS: output generated by the following equation:
% maps = SIGMA_C M_C + SIGMA_S M_S + (1-SIGMA_S) M_G,
% where M_C and M_S are the ground truth and individual specific map given in the list file(s).
%
% Trang Cao, Neural Systems and Behaviour Lab, Monash University, 2022.

%% set parameters
addpath('func')
addpath(fullfile('utils','gifti-matlab'))

N_sub = N_A + N_B; % total number of subjects

%% read input maps
if length(varargin) == 2
    GT_dir = varargin{1};
    GT_file = varargin{2};
    GT_maps = read_input_map(GT_dir,GT_file);
    
    input_maps = read_input_map(ID_dir,ID_file);
elseif length(varargin) ~= 0
    error('Error. Not expected input.')
else
    input = read_input_map(ID_dir,ID_file);
    input_maps = input(1:N_sub,:);
    GT_maps = input(N_sub+1:N_sub+2,:);
end

%% generating CT maps base on the model
N_vertices = size(GT_maps,2); % number of vertices in a map

M_G = randn(N_sub,N_vertices);   %Gaussian noise

maps(1:N_A,:) = sigma_C * GT_maps(1,:) + sigma_S * input_maps(1:N_A,:) + (1-sigma_S) * M_G(1:N_A,:);
maps(N_A+1:N_sub,:) = sigma_C * GT_maps(2,:) + sigma_S * input_maps(N_A+1:N_sub,:) + (1-sigma_S) * M_G(N_A+1:N_sub,:);

%remove negative offset for realisitic maps
if min(maps,[],'all') < 0
    maps = maps - min(maps,[],'all');
end

% %% save each generated map seperately 
% 
% for ig = 1:N_sub
%     
%     p_gifti.cdata = maps(ig,:);
%     p_gifti = gifti(p_gifti);
%     save(p_gifti,fullfile(save_DIR,['map_',num2str(N_sub),'_',num2str(sigma_C),'_',num2str(sigma_S),'_',num2str(in_e),'_',num2str(ig),'.func.gii']));
% 
% end

end

